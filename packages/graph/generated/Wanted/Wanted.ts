// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BountyClaimed extends ethereum.Event {
  get params(): BountyClaimed__Params {
    return new BountyClaimed__Params(this);
  }
}

export class BountyClaimed__Params {
  _event: BountyClaimed;

  constructor(event: BountyClaimed) {
    this._event = event;
  }

  get bountyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get claimer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BountyCreated extends ethereum.Event {
  get params(): BountyCreated__Params {
    return new BountyCreated__Params(this);
  }
}

export class BountyCreated__Params {
  _event: BountyCreated;

  constructor(event: BountyCreated) {
    this._event = event;
  }

  get bountyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get leadingBytes(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class Wanted__bountiesResult {
  value0: Address;
  value1: boolean;
  value2: BigInt;
  value3: BigInt;
  value4: Bytes;

  constructor(
    value0: Address,
    value1: boolean,
    value2: BigInt,
    value3: BigInt,
    value4: Bytes
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBytes(this.value4));
    return map;
  }

  getOwner(): Address {
    return this.value0;
  }

  getIsClaimed(): boolean {
    return this.value1;
  }

  getCancelTime(): BigInt {
    return this.value2;
  }

  getAmount(): BigInt {
    return this.value3;
  }

  getLeadingBytes(): Bytes {
    return this.value4;
  }
}

export class Wanted extends ethereum.SmartContract {
  static bind(address: Address): Wanted {
    return new Wanted("Wanted", address);
  }

  addrenfty(): Address {
    let result = super.call("addrenfty", "addrenfty():(address)", []);

    return result[0].toAddress();
  }

  try_addrenfty(): ethereum.CallResult<Address> {
    let result = super.tryCall("addrenfty", "addrenfty():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  bounties(param0: BigInt): Wanted__bountiesResult {
    let result = super.call(
      "bounties",
      "bounties(uint256):(address,bool,uint48,uint128,bytes)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Wanted__bountiesResult(
      result[0].toAddress(),
      result[1].toBoolean(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBytes()
    );
  }

  try_bounties(param0: BigInt): ethereum.CallResult<Wanted__bountiesResult> {
    let result = super.tryCall(
      "bounties",
      "bounties(uint256):(address,bool,uint48,uint128,bytes)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Wanted__bountiesResult(
        value[0].toAddress(),
        value[1].toBoolean(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBytes()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _addrenfty(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimBountyCall extends ethereum.Call {
  get inputs(): ClaimBountyCall__Inputs {
    return new ClaimBountyCall__Inputs(this);
  }

  get outputs(): ClaimBountyCall__Outputs {
    return new ClaimBountyCall__Outputs(this);
  }
}

export class ClaimBountyCall__Inputs {
  _call: ClaimBountyCall;

  constructor(call: ClaimBountyCall) {
    this._call = call;
  }

  get bountyId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get nftId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ClaimBountyCall__Outputs {
  _call: ClaimBountyCall;

  constructor(call: ClaimBountyCall) {
    this._call = call;
  }
}

export class CreateBountyCall extends ethereum.Call {
  get inputs(): CreateBountyCall__Inputs {
    return new CreateBountyCall__Inputs(this);
  }

  get outputs(): CreateBountyCall__Outputs {
    return new CreateBountyCall__Outputs(this);
  }
}

export class CreateBountyCall__Inputs {
  _call: CreateBountyCall;

  constructor(call: CreateBountyCall) {
    this._call = call;
  }

  get leadingBytes(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CreateBountyCall__Outputs {
  _call: CreateBountyCall;

  constructor(call: CreateBountyCall) {
    this._call = call;
  }
}
